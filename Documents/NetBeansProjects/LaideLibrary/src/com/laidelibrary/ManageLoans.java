/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.laidelibrary;

import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author pc
 */
public class ManageLoans extends javax.swing.JFrame {

    /**
     * Creates new form ManageBooks
     */
    // Populating the table object with values from the database
    // Creating the ResultSet object that holds the value from the database
    // table
    ResultSet tableContents = null;

    // Creating an object of the SQLQueries Class
    SQLQueries sqlqueriesObject = new SQLQueries();

    public ManageLoans() {
        initComponents();

        //Centralise the Window
        this.setLocationRelativeTo(null);
        
        //Disable resizing
        this.setResizable(false);

        //Stop the Window Exit Button from closing the application
        this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);

        // Executing the required method within the SQLQueries class
        // and saving it to the ResultSet object
        tableContents = sqlqueriesObject.getAllLoans();

        // Populating the Java table object with the values in the  
        // saved ResultSet object
        tbLoanRecords.setModel(DbUtils.resultSetToTableModel(tableContents));
        tbLoanRecords.setEnabled(false);
    }

    public void insertNewLoan(int userID, int bookID) {
        // get insert status
        boolean insertNewLoanStatus = sqlqueriesObject.insertLoan(userID, bookID);

        // if insert is successful
        if (insertNewLoanStatus == false) {
            JOptionPane.showMessageDialog(this,
                    "Loan Successful!\n Please issue the book to the user \n"
                    + "and remind them of the Return Date.",
                    "Success!", JOptionPane.INFORMATION_MESSAGE);
            // Executing the required method within the SQLQueries class
            // and saving it to the ResultSet object
            ResultSet newContents = sqlqueriesObject.getAllLoans();

            // Populating the Java table object with the values in the  
            // saved ResultSet object
            tbLoanRecords.setModel(DbUtils.resultSetToTableModel(newContents));
            tbLoanRecords.setEnabled(false);

            // Reset the relevant spinners
            spnLendUserID.setValue(0);
            spnLendBookID.setValue(0);
        } else {
            JOptionPane.showMessageDialog(this,
                    "Error Inserting Loan Details!\n"
                    + "Check BookID!",
                    "An error occured!",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbLoanRecords = new javax.swing.JTable();
        btnReturn = new javax.swing.JButton();
        lblAllBooks = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        lblUpdateBook = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        lblDeleteLoanRecord = new javax.swing.JLabel();
        lblBookId = new javax.swing.JLabel();
        lblLogo = new javax.swing.JLabel();
        spnReturnLoanID = new javax.swing.JSpinner();
        lblTitle = new javax.swing.JLabel();
        lblBookId1 = new javax.swing.JLabel();
        spnDeleteLoanID = new javax.swing.JSpinner();
        txtSearch = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        lblUpdateBook1 = new javax.swing.JLabel();
        lblBookId2 = new javax.swing.JLabel();
        spnLendUserID = new javax.swing.JSpinner();
        lblBookId3 = new javax.swing.JLabel();
        spnLendBookID = new javax.swing.JSpinner();
        btnLend = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jSeparator2.setForeground(new java.awt.Color(76, 171, 118));

        tbLoanRecords.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tbLoanRecords);

        btnReturn.setBackground(new java.awt.Color(56, 72, 96));
        btnReturn.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        btnReturn.setForeground(new java.awt.Color(255, 255, 255));
        btnReturn.setText("Return");
        btnReturn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnActionPerformed(evt);
            }
        });

        lblAllBooks.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        lblAllBooks.setForeground(new java.awt.Color(56, 72, 96));
        lblAllBooks.setText("Loan Records");

        jSeparator1.setForeground(new java.awt.Color(76, 171, 118));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator1.setToolTipText("");

        lblUpdateBook.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        lblUpdateBook.setForeground(new java.awt.Color(56, 72, 96));
        lblUpdateBook.setText("Return a Book");
        lblUpdateBook.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        btnDelete.setBackground(new java.awt.Color(56, 72, 96));
        btnDelete.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete");
        btnDelete.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(64, 120, 102));
        btnBack.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("Back");
        btnBack.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblDeleteLoanRecord.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        lblDeleteLoanRecord.setForeground(new java.awt.Color(56, 72, 96));
        lblDeleteLoanRecord.setText("Delete Loan Record");
        lblDeleteLoanRecord.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        lblBookId.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        lblBookId.setForeground(new java.awt.Color(56, 72, 96));
        lblBookId.setText("Loan ID:");

        lblLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/laidelibrary/images/laide_library_logo.png"))); // NOI18N

        spnReturnLoanID.setFont(new java.awt.Font("Cambria", 0, 11)); // NOI18N
        spnReturnLoanID.setModel(new javax.swing.SpinnerNumberModel());

        lblTitle.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(56, 72, 96));
        lblTitle.setText("Manage Loans");
        lblTitle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblBookId1.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        lblBookId1.setForeground(new java.awt.Color(56, 72, 96));
        lblBookId1.setText("Loan ID:");

        spnDeleteLoanID.setFont(new java.awt.Font("Cambria", 0, 11)); // NOI18N
        spnDeleteLoanID.setModel(new javax.swing.SpinnerNumberModel());

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Cambria", 3, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(56, 72, 96));
        jLabel1.setText("Search:");

        lblUpdateBook1.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        lblUpdateBook1.setForeground(new java.awt.Color(56, 72, 96));
        lblUpdateBook1.setText("Lend a Book");
        lblUpdateBook1.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        lblBookId2.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        lblBookId2.setForeground(new java.awt.Color(56, 72, 96));
        lblBookId2.setText("User ID:");

        spnLendUserID.setFont(new java.awt.Font("Cambria", 0, 11)); // NOI18N
        spnLendUserID.setModel(new javax.swing.SpinnerNumberModel());

        lblBookId3.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        lblBookId3.setForeground(new java.awt.Color(56, 72, 96));
        lblBookId3.setText("Book ID:");

        spnLendBookID.setFont(new java.awt.Font("Cambria", 0, 11)); // NOI18N
        spnLendBookID.setModel(new javax.swing.SpinnerNumberModel());

        btnLend.setBackground(new java.awt.Color(56, 72, 96));
        btnLend.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        btnLend.setForeground(new java.awt.Color(255, 255, 255));
        btnLend.setText("Lend");
        btnLend.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnLend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 395, Short.MAX_VALUE)
                                .addComponent(lblAllBooks)
                                .addGap(228, 228, 228)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(17, 17, 17)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(lblUpdateBook)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGap(9, 9, 9)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addGroup(layout.createSequentialGroup()
                                                            .addComponent(lblBookId3)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                            .addComponent(spnLendBookID, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(lblUpdateBook1)
                                                        .addComponent(btnLend, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addGroup(layout.createSequentialGroup()
                                                            .addComponent(lblBookId2)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                            .addComponent(spnLendUserID))))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(lblBookId)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(spnReturnLoanID, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addComponent(btnReturn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(18, 18, 18)
                                            .addComponent(lblBookId1)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(spnDeleteLoanID, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(lblDeleteLoanRecord))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(78, 78, 78)
                                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(57, 57, 57))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(lblTitle))
                            .addComponent(lblLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(510, 510, 510))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTitle)
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAllBooks)
                            .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 455, Short.MAX_VALUE))
                    .addComponent(jSeparator1)))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(149, 149, 149)
                .addComponent(lblUpdateBook1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spnLendUserID, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBookId2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spnLendBookID, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                    .addComponent(lblBookId3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(15, 15, 15)
                .addComponent(btnLend, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblUpdateBook)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spnReturnLoanID, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBookId))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(lblDeleteLoanRecord)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBookId1)
                    .addComponent(spnDeleteLoanID, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnActionPerformed
        // Create an SQLQueries object to check availability of the book in database
        SQLQueries queryObject = new SQLQueries();

        // Get the content of the Loan ID Spinner
        int loanID = (int) spnReturnLoanID.getValue();

        //Confirm that the LoanID field is not left blank or zero
        if (loanID <= 0) {
            JOptionPane.showMessageDialog(this,
                    "Please enter Loan ID!",
                    "Enter Loan ID!", JOptionPane.WARNING_MESSAGE);
        } else {
            // update the returned value for the selected loan
            String updateStatus
                    = queryObject.updateLoan(loanID);
            if (updateStatus.equals("successful")) {
                JOptionPane.showMessageDialog(this,
                        "Book Returned Successfully!", "Success!",
                        JOptionPane.INFORMATION_MESSAGE);
                // Executing the required method within the SQLQueries class
                // and saving it to the ResultSet object
                tableContents = sqlqueriesObject.getAllLoans();

                // Populating the Java table object with the values in the  
                // saved ResultSet object
                tbLoanRecords.setModel(DbUtils.resultSetToTableModel(tableContents));
                tbLoanRecords.setEnabled(false);
                // Reset corresponding spinner
                spnReturnLoanID.setValue(0);
            } else {
                JOptionPane.showMessageDialog(this,
                        "Unable to update Loan's Details!\n"
                        + "Check LoanID!",
                        "An error occured!",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnReturnActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // Create an SQLQueries object to check availability of the user in database
        SQLQueries queryObject = new SQLQueries();

        // Get the content of the Loan ID Spinner
        int loanID = (int) spnDeleteLoanID.getValue();

        //Confirm that the LoanID field is not left blank or zero
        if (loanID <= 0) {
            JOptionPane.showMessageDialog(this,
                    "Please enter Loan ID!",
                    "Enter Loan ID!", JOptionPane.WARNING_MESSAGE);
        } else {
            // delete the loan record
            int deleteStatus = queryObject.deleteLoan(loanID);

            // if deletion is successful
            if (deleteStatus == 1) {
                JOptionPane.showMessageDialog(this,
                        "Loan deleted successfully!", "Success!",
                        JOptionPane.INFORMATION_MESSAGE);
                // Executing the method within the SQLQueries class to populate the
                // table with the current contents and saving it to the ResultSet object
                tableContents = sqlqueriesObject.getAllLoans();

                // Populating the Java table object with the values in the 
                // saved ResultSet object
                tbLoanRecords.setModel(DbUtils.resultSetToTableModel(tableContents));

                // Reset all delete fields
                spnDeleteLoanID.setValue(0);
            } else {
                JOptionPane.showMessageDialog(this,
                        "Unable to delete Loan Record!\n"
                        + "Check LoanID!",
                        "An error occured!",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // Close this window
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // The object to filter through
        TableRowSorter sorter;

        // Executing the required method within the SQLQueries class
        // and saving it to the ResultSet object
        tableContents = sqlqueriesObject.getAllBooks();

        // Setting up the search functionality
        sorter = new TableRowSorter<>(DbUtils.resultSetToTableModel(tableContents));
        tbLoanRecords.setRowSorter(sorter);

        // Getting the value typed
        String search = txtSearch.getText();

        // Filtering through the values in the table
        if (txtSearch.getText().trim().isEmpty()) {
            sorter.setRowFilter(null);
        } else {
            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + search));
        }
    }//GEN-LAST:event_txtSearchKeyReleased

    private void btnLendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLendActionPerformed
        // Create an SQLQueries object to check availability of the user in database
        SQLQueries queryObject = new SQLQueries();

        // Get the content of the Loan ID Spinner
        int userID = (int) spnLendUserID.getValue();
        int bookID = (int) spnLendBookID.getValue();

        //Confirm that the LoanID field is not left blank or zero
        if (userID <= 0) {
            JOptionPane.showMessageDialog(this,
                    "Please enter User ID!",
                    "Enter User ID!", JOptionPane.WARNING_MESSAGE);
        } else if (bookID <= 0) {
            JOptionPane.showMessageDialog(this,
                    "Please enter Book ID!",
                    "Enter Book ID!", JOptionPane.WARNING_MESSAGE);
        } else {
            // Check if the user exists in the database
            String userStatus = queryObject.validateUser(userID);

            switch (userStatus) {
                case "valid":
                    // check if user has loaned a book before
                    String loanedBefore = queryObject.checkUserLoan(userID);
                    switch (loanedBefore) {
                        case "valid":
                            // check if user returned the last book loaned
                            String returned = queryObject.validateUserLoan(userID);
                            switch (returned) {
                                case "valid":
                                    // insert new loan details
                                    insertNewLoan(userID, bookID);
                                    break;
                                default:
                                    JOptionPane.showMessageDialog(this,
                                            "Please ask user to return previously loaned book! "
                                            + "This request will not be granted otherwise."
                                            + "\nPlease see the Loan Records table for "
                                            + "more information.",
                                            "Error! User with ID:" + userID
                                            + " is owing us a book!",
                                            JOptionPane.ERROR_MESSAGE);
                                    break;
                            }
                            break;
                        default:
                            // insert new loan details
                            insertNewLoan(userID, bookID);
                            break;
                    }
                    break;
                default:
                    JOptionPane.showMessageDialog(this,
                            "User with ID:" + userID + " does not exist!",
                            "Error! Invalid User ID!",
                            JOptionPane.ERROR_MESSAGE);
                    break;
            }
        }
    }//GEN-LAST:event_btnLendActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageLoans.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageLoans.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageLoans.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageLoans.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageLoans().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnLend;
    private javax.swing.JButton btnReturn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblAllBooks;
    private javax.swing.JLabel lblBookId;
    private javax.swing.JLabel lblBookId1;
    private javax.swing.JLabel lblBookId2;
    private javax.swing.JLabel lblBookId3;
    private javax.swing.JLabel lblDeleteLoanRecord;
    private javax.swing.JLabel lblLogo;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblUpdateBook;
    private javax.swing.JLabel lblUpdateBook1;
    private javax.swing.JSpinner spnDeleteLoanID;
    private javax.swing.JSpinner spnLendBookID;
    private javax.swing.JSpinner spnLendUserID;
    private javax.swing.JSpinner spnReturnLoanID;
    private javax.swing.JTable tbLoanRecords;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
